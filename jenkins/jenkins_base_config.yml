jenkins:

  systemMessage: "Welcome to a jenkins account"

  remotingSecurity:
    enabled: true



  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: "admin_user"
          name: "admin_one"
          password: ${USER_ONE_PASSWORD}
        - id: "editor_user"
          name: "editor_two"
          password: ${USER_TWO_PASSWORD}
        - id: "builder_user"
          name: "builder_three"
          password: ${USER_THREE_PASSWORD}
        - id: "reader_user"
          name: "reader_four"
          password: ${USER_FOUR_PASSWORD}



  authorizationStrategy:
    roleBased:
      roles:
        global:
          - name: "admin"
            description: "Admin member"
            permissions:
              - "Overall/Administer"
            assignments:
              - "admin_user"
          - name: "builder"
            description: "Builder member"
            permissions:
              - "Overall/Read"
              - "Job/Build"
              - "Job/Read"
              - "Job/Workspace"
            assignments:
              - "builder_user"
          - name: "editor"
            description: "Editor member"
            permissions:
              - "Overall/Read"
              - "Job/Move"
              - "Job/Build"
              - "Job/Delete"
              - "Job/Create"
              - "Job/Read"
              - "Job/Configure"
              - "Job/Workspace"
              - "Job/Cancel"
            assignments:
              - "editor_user"
          - name: "reader"
            description: "Reader member"
            permissions:
              - "Overall/Read"
              - "Job/Read"
              - "Job/Workspace"
            assignments:
              - "reader_user"

security:
  globalJobDslSecurityConfiguration:
    useScriptSecurity: false

jobs:
  - script: >
      folder('Tools') {
        description('Folder for miscellaneous tools.')
      }
      freeStyleJob('Tools/clone-repository') {
        parameters {
          stringParam("GIT_REPOSITORY_URL", null, "Git URL of the repository to clone")
        }
        steps {
          shell("git clone \$GIT_REPOSITORY_URL")
        }
        wrappers {
          preBuildCleanup {
            deleteDirectories()
            cleanupParameter()
          }
        }
      }
      freeStyleJob('Tools/SEED') {
        parameters {
          stringParam("GITHUB_NAME", null, "GitHub repository owner/repo_name (e.g.: \"vince52/PSU_my_ls_2019\")")
          stringParam("DISPLAY_NAME", null, "Display name for the job")
          steps {
            dsl {
              text('''
              job(DISPLAY_NAME) {
                wrappers {
                  preBuildCleanup {
                    deleteDirectories()
                    cleanupParameter()
                  }
                }
                steps {
                  shell(\'make fclean\')
                  shell(\'make\')
                  shell(\'make test\')
                  shell(\'make clean\')
                }
                triggers {
                  scm("* * * * *")
                }
                scm {
                  git {
                    remote {
                      github(GITHUB_NAME, "https")
                    }
                  }
                }
              }
              ''')
            }
          }
        }
      }